// Simple and Robust Language Switcherdocument.addEventListener('DOMContentLoaded', function() { console.log('Simple language switcher initializing...'); // Wait for dynamic translator to initialize first setTimeout(() => { initializeLanguageSwitcher(); }, 200);});function initializeLanguageSwitcher() { const toggle = document.getElementById('language-toggle'); const menu = document.getElementById('language-menu'); const currentLangSpan = document.querySelector('.current-lang'); console.log('Toggle element:', toggle); console.log('Menu element:', menu); console.log('Current lang span:', currentLangSpan); if (!toggle || !menu) { console.error('Language switcher elements not found'); return; } // Load saved language preference const savedLanguage = localStorage.getItem('cookbook-language') || 'en'; updateLanguageDisplay(savedLanguage); // Remove any existing event listeners const newToggle = toggle.cloneNode(true); toggle.parentNode.replaceChild(newToggle, toggle); // Add new event listener with higher priority newToggle.addEventListener('click', function(e) { e.stopPropagation(); e.preventDefault(); e.stopImmediatePropagation(); console.log('=== LANGUAGE TOGGLE CLICKED ==='); console.log('Event:', e); console.log('Toggle element:', newToggle); console.log('Menu element:', menu); console.log('Menu classes before:', menu.className); console.log('Menu styles before:', window.getComputedStyle(menu)); const isVisible = menu.classList.contains('show'); console.log('Current visibility state:', isVisible); // Toggle the show class menu.classList.toggle('show'); console.log('Menu classes after:', menu.className); console.log('Menu styles after:', window.getComputedStyle(menu)); // Force visibility if needed if (menu.classList.contains('show')) { console.log('Forcing menu visibility...'); menu.style.cssText = ` opacity: 1 !important; visibility: visible !important; transform: translateY(0) !important; pointer-events: auto !important; display: block !important; position: absolute !important; top: calc(100% + 4px) !important; right: 0 !important; z-index: 10000 !important; `; console.log('Menu forced visibility applied'); } else { console.log('Hiding menu...'); menu.style.cssText = ` opacity: 0 !important; visibility: hidden !important; pointer-events: none !important; `; } console.log('Final menu styles:', window.getComputedStyle(menu)); }, true); // Use capture phase for higher priority // Close menu when clicking outside document.addEventListener('click', function(e) { if (!newToggle.contains(e.target) && !menu.contains(e.target)) { menu.classList.remove('show'); menu.style.cssText = ` opacity: 0 !important; visibility: hidden !important; pointer-events: none !important; `; } }); // Handle language selection const langOptions = menu.querySelectorAll('.lang-option'); langOptions.forEach(option => { option.addEventListener('click', function(e) { e.stopPropagation(); e.preventDefault(); const selectedLang = this.dataset.lang; console.log('Language selected:', selectedLang); // Update active state langOptions.forEach(opt => opt.classList.remove('active')); this.classList.add('active'); // Update display updateLanguageDisplay(selectedLang); // Save preference localStorage.setItem('cookbook-language', selectedLang); // Close menu menu.classList.remove('show'); menu.style.cssText = ` opacity: 0 !important; visibility: hidden !important; pointer-events: none !important; `; // Change language using dynamic translator if available if (window.dynamicTranslator) { console.log('Using dynamic translator to change language'); window.dynamicTranslator.changeLanguage(selectedLang); } else { console.log('Dynamic translator not available, reloading page'); // Fallback: reload page to apply language change setTimeout(() => { window.location.reload(); }, 500); } // Show feedback showLanguageChangeFeedback(selectedLang); }); }); function updateLanguageDisplay(lang) { const languages = { 'en': 'English', 'fr': 'Français', 'es': 'Español', 'de': 'Deutsch', 'it': 'Italiano', 'pt': 'Português', 'nl': 'Nederlands', 'ru': 'Русский', 'zh': '中文', 'ja': '日本語', 'ko': '한국어' }; if (currentLangSpan) { currentLangSpan.textContent = languages[lang] || 'English'; } } function showLanguageChangeFeedback(lang) { // Create a temporary notification const notification = document.createElement('div'); notification.style.cssText = ` position: fixed; top: 20px; right: 20px; background: #4CAF50; color: white; padding: 12px 20px; border-radius: 5px; z-index: 10000; font-family: Arial, sans-serif; box-shadow: 0 2px 10px rgba(0,0,0,0.2); `; notification.textContent = `Language changed to: ${lang.toUpperCase()}`; document.body.appendChild(notification); // Remove after 3 seconds setTimeout(() => { notification.remove(); }, 3000); } console.log('Simple language switcher initialized successfully');} 